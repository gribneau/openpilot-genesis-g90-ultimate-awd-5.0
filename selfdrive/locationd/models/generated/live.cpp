#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                      Code generated with SymPy 1.10.1                      *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_2168916314203170392) {
   out_2168916314203170392[0] = 0;
   out_2168916314203170392[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_2168916314203170392[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_2168916314203170392[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_2168916314203170392[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_2168916314203170392[5] = -sin(in_vec[1]);
   out_2168916314203170392[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2168916314203170392[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2168916314203170392[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_2168916314203170392[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_2168916314203170392[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_2168916314203170392[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_2168916314203170392[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2168916314203170392[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2168916314203170392[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_2168916314203170392[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_2168916314203170392[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_2168916314203170392[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_3677991861132702640) {
   out_3677991861132702640[0] = delta_x[0] + nom_x[0];
   out_3677991861132702640[1] = delta_x[1] + nom_x[1];
   out_3677991861132702640[2] = delta_x[2] + nom_x[2];
   out_3677991861132702640[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_3677991861132702640[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_3677991861132702640[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_3677991861132702640[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_3677991861132702640[7] = delta_x[6] + nom_x[7];
   out_3677991861132702640[8] = delta_x[7] + nom_x[8];
   out_3677991861132702640[9] = delta_x[8] + nom_x[9];
   out_3677991861132702640[10] = delta_x[9] + nom_x[10];
   out_3677991861132702640[11] = delta_x[10] + nom_x[11];
   out_3677991861132702640[12] = delta_x[11] + nom_x[12];
   out_3677991861132702640[13] = delta_x[12] + nom_x[13];
   out_3677991861132702640[14] = delta_x[13] + nom_x[14];
   out_3677991861132702640[15] = delta_x[14] + nom_x[15];
   out_3677991861132702640[16] = delta_x[15] + nom_x[16];
   out_3677991861132702640[17] = delta_x[16] + nom_x[17];
   out_3677991861132702640[18] = delta_x[17] + nom_x[18];
   out_3677991861132702640[19] = delta_x[18] + nom_x[19];
   out_3677991861132702640[20] = delta_x[19] + nom_x[20];
   out_3677991861132702640[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_4193639185133627321) {
   out_4193639185133627321[0] = -nom_x[0] + true_x[0];
   out_4193639185133627321[1] = -nom_x[1] + true_x[1];
   out_4193639185133627321[2] = -nom_x[2] + true_x[2];
   out_4193639185133627321[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_4193639185133627321[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_4193639185133627321[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_4193639185133627321[6] = -nom_x[7] + true_x[7];
   out_4193639185133627321[7] = -nom_x[8] + true_x[8];
   out_4193639185133627321[8] = -nom_x[9] + true_x[9];
   out_4193639185133627321[9] = -nom_x[10] + true_x[10];
   out_4193639185133627321[10] = -nom_x[11] + true_x[11];
   out_4193639185133627321[11] = -nom_x[12] + true_x[12];
   out_4193639185133627321[12] = -nom_x[13] + true_x[13];
   out_4193639185133627321[13] = -nom_x[14] + true_x[14];
   out_4193639185133627321[14] = -nom_x[15] + true_x[15];
   out_4193639185133627321[15] = -nom_x[16] + true_x[16];
   out_4193639185133627321[16] = -nom_x[17] + true_x[17];
   out_4193639185133627321[17] = -nom_x[18] + true_x[18];
   out_4193639185133627321[18] = -nom_x[19] + true_x[19];
   out_4193639185133627321[19] = -nom_x[20] + true_x[20];
   out_4193639185133627321[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_7723395843437171411) {
   out_7723395843437171411[0] = 1.0;
   out_7723395843437171411[1] = 0;
   out_7723395843437171411[2] = 0;
   out_7723395843437171411[3] = 0;
   out_7723395843437171411[4] = 0;
   out_7723395843437171411[5] = 0;
   out_7723395843437171411[6] = 0;
   out_7723395843437171411[7] = 0;
   out_7723395843437171411[8] = 0;
   out_7723395843437171411[9] = 0;
   out_7723395843437171411[10] = 0;
   out_7723395843437171411[11] = 0;
   out_7723395843437171411[12] = 0;
   out_7723395843437171411[13] = 0;
   out_7723395843437171411[14] = 0;
   out_7723395843437171411[15] = 0;
   out_7723395843437171411[16] = 0;
   out_7723395843437171411[17] = 0;
   out_7723395843437171411[18] = 0;
   out_7723395843437171411[19] = 0;
   out_7723395843437171411[20] = 0;
   out_7723395843437171411[21] = 0;
   out_7723395843437171411[22] = 1.0;
   out_7723395843437171411[23] = 0;
   out_7723395843437171411[24] = 0;
   out_7723395843437171411[25] = 0;
   out_7723395843437171411[26] = 0;
   out_7723395843437171411[27] = 0;
   out_7723395843437171411[28] = 0;
   out_7723395843437171411[29] = 0;
   out_7723395843437171411[30] = 0;
   out_7723395843437171411[31] = 0;
   out_7723395843437171411[32] = 0;
   out_7723395843437171411[33] = 0;
   out_7723395843437171411[34] = 0;
   out_7723395843437171411[35] = 0;
   out_7723395843437171411[36] = 0;
   out_7723395843437171411[37] = 0;
   out_7723395843437171411[38] = 0;
   out_7723395843437171411[39] = 0;
   out_7723395843437171411[40] = 0;
   out_7723395843437171411[41] = 0;
   out_7723395843437171411[42] = 0;
   out_7723395843437171411[43] = 0;
   out_7723395843437171411[44] = 1.0;
   out_7723395843437171411[45] = 0;
   out_7723395843437171411[46] = 0;
   out_7723395843437171411[47] = 0;
   out_7723395843437171411[48] = 0;
   out_7723395843437171411[49] = 0;
   out_7723395843437171411[50] = 0;
   out_7723395843437171411[51] = 0;
   out_7723395843437171411[52] = 0;
   out_7723395843437171411[53] = 0;
   out_7723395843437171411[54] = 0;
   out_7723395843437171411[55] = 0;
   out_7723395843437171411[56] = 0;
   out_7723395843437171411[57] = 0;
   out_7723395843437171411[58] = 0;
   out_7723395843437171411[59] = 0;
   out_7723395843437171411[60] = 0;
   out_7723395843437171411[61] = 0;
   out_7723395843437171411[62] = 0;
   out_7723395843437171411[63] = 0;
   out_7723395843437171411[64] = 0;
   out_7723395843437171411[65] = 0;
   out_7723395843437171411[66] = -0.5*state[4];
   out_7723395843437171411[67] = -0.5*state[5];
   out_7723395843437171411[68] = -0.5*state[6];
   out_7723395843437171411[69] = 0;
   out_7723395843437171411[70] = 0;
   out_7723395843437171411[71] = 0;
   out_7723395843437171411[72] = 0;
   out_7723395843437171411[73] = 0;
   out_7723395843437171411[74] = 0;
   out_7723395843437171411[75] = 0;
   out_7723395843437171411[76] = 0;
   out_7723395843437171411[77] = 0;
   out_7723395843437171411[78] = 0;
   out_7723395843437171411[79] = 0;
   out_7723395843437171411[80] = 0;
   out_7723395843437171411[81] = 0;
   out_7723395843437171411[82] = 0;
   out_7723395843437171411[83] = 0;
   out_7723395843437171411[84] = 0;
   out_7723395843437171411[85] = 0;
   out_7723395843437171411[86] = 0;
   out_7723395843437171411[87] = 0.5*state[3];
   out_7723395843437171411[88] = 0.5*state[6];
   out_7723395843437171411[89] = -0.5*state[5];
   out_7723395843437171411[90] = 0;
   out_7723395843437171411[91] = 0;
   out_7723395843437171411[92] = 0;
   out_7723395843437171411[93] = 0;
   out_7723395843437171411[94] = 0;
   out_7723395843437171411[95] = 0;
   out_7723395843437171411[96] = 0;
   out_7723395843437171411[97] = 0;
   out_7723395843437171411[98] = 0;
   out_7723395843437171411[99] = 0;
   out_7723395843437171411[100] = 0;
   out_7723395843437171411[101] = 0;
   out_7723395843437171411[102] = 0;
   out_7723395843437171411[103] = 0;
   out_7723395843437171411[104] = 0;
   out_7723395843437171411[105] = 0;
   out_7723395843437171411[106] = 0;
   out_7723395843437171411[107] = 0;
   out_7723395843437171411[108] = -0.5*state[6];
   out_7723395843437171411[109] = 0.5*state[3];
   out_7723395843437171411[110] = 0.5*state[4];
   out_7723395843437171411[111] = 0;
   out_7723395843437171411[112] = 0;
   out_7723395843437171411[113] = 0;
   out_7723395843437171411[114] = 0;
   out_7723395843437171411[115] = 0;
   out_7723395843437171411[116] = 0;
   out_7723395843437171411[117] = 0;
   out_7723395843437171411[118] = 0;
   out_7723395843437171411[119] = 0;
   out_7723395843437171411[120] = 0;
   out_7723395843437171411[121] = 0;
   out_7723395843437171411[122] = 0;
   out_7723395843437171411[123] = 0;
   out_7723395843437171411[124] = 0;
   out_7723395843437171411[125] = 0;
   out_7723395843437171411[126] = 0;
   out_7723395843437171411[127] = 0;
   out_7723395843437171411[128] = 0;
   out_7723395843437171411[129] = 0.5*state[5];
   out_7723395843437171411[130] = -0.5*state[4];
   out_7723395843437171411[131] = 0.5*state[3];
   out_7723395843437171411[132] = 0;
   out_7723395843437171411[133] = 0;
   out_7723395843437171411[134] = 0;
   out_7723395843437171411[135] = 0;
   out_7723395843437171411[136] = 0;
   out_7723395843437171411[137] = 0;
   out_7723395843437171411[138] = 0;
   out_7723395843437171411[139] = 0;
   out_7723395843437171411[140] = 0;
   out_7723395843437171411[141] = 0;
   out_7723395843437171411[142] = 0;
   out_7723395843437171411[143] = 0;
   out_7723395843437171411[144] = 0;
   out_7723395843437171411[145] = 0;
   out_7723395843437171411[146] = 0;
   out_7723395843437171411[147] = 0;
   out_7723395843437171411[148] = 0;
   out_7723395843437171411[149] = 0;
   out_7723395843437171411[150] = 0;
   out_7723395843437171411[151] = 0;
   out_7723395843437171411[152] = 0;
   out_7723395843437171411[153] = 1.0;
   out_7723395843437171411[154] = 0;
   out_7723395843437171411[155] = 0;
   out_7723395843437171411[156] = 0;
   out_7723395843437171411[157] = 0;
   out_7723395843437171411[158] = 0;
   out_7723395843437171411[159] = 0;
   out_7723395843437171411[160] = 0;
   out_7723395843437171411[161] = 0;
   out_7723395843437171411[162] = 0;
   out_7723395843437171411[163] = 0;
   out_7723395843437171411[164] = 0;
   out_7723395843437171411[165] = 0;
   out_7723395843437171411[166] = 0;
   out_7723395843437171411[167] = 0;
   out_7723395843437171411[168] = 0;
   out_7723395843437171411[169] = 0;
   out_7723395843437171411[170] = 0;
   out_7723395843437171411[171] = 0;
   out_7723395843437171411[172] = 0;
   out_7723395843437171411[173] = 0;
   out_7723395843437171411[174] = 0;
   out_7723395843437171411[175] = 1.0;
   out_7723395843437171411[176] = 0;
   out_7723395843437171411[177] = 0;
   out_7723395843437171411[178] = 0;
   out_7723395843437171411[179] = 0;
   out_7723395843437171411[180] = 0;
   out_7723395843437171411[181] = 0;
   out_7723395843437171411[182] = 0;
   out_7723395843437171411[183] = 0;
   out_7723395843437171411[184] = 0;
   out_7723395843437171411[185] = 0;
   out_7723395843437171411[186] = 0;
   out_7723395843437171411[187] = 0;
   out_7723395843437171411[188] = 0;
   out_7723395843437171411[189] = 0;
   out_7723395843437171411[190] = 0;
   out_7723395843437171411[191] = 0;
   out_7723395843437171411[192] = 0;
   out_7723395843437171411[193] = 0;
   out_7723395843437171411[194] = 0;
   out_7723395843437171411[195] = 0;
   out_7723395843437171411[196] = 0;
   out_7723395843437171411[197] = 1.0;
   out_7723395843437171411[198] = 0;
   out_7723395843437171411[199] = 0;
   out_7723395843437171411[200] = 0;
   out_7723395843437171411[201] = 0;
   out_7723395843437171411[202] = 0;
   out_7723395843437171411[203] = 0;
   out_7723395843437171411[204] = 0;
   out_7723395843437171411[205] = 0;
   out_7723395843437171411[206] = 0;
   out_7723395843437171411[207] = 0;
   out_7723395843437171411[208] = 0;
   out_7723395843437171411[209] = 0;
   out_7723395843437171411[210] = 0;
   out_7723395843437171411[211] = 0;
   out_7723395843437171411[212] = 0;
   out_7723395843437171411[213] = 0;
   out_7723395843437171411[214] = 0;
   out_7723395843437171411[215] = 0;
   out_7723395843437171411[216] = 0;
   out_7723395843437171411[217] = 0;
   out_7723395843437171411[218] = 0;
   out_7723395843437171411[219] = 1.0;
   out_7723395843437171411[220] = 0;
   out_7723395843437171411[221] = 0;
   out_7723395843437171411[222] = 0;
   out_7723395843437171411[223] = 0;
   out_7723395843437171411[224] = 0;
   out_7723395843437171411[225] = 0;
   out_7723395843437171411[226] = 0;
   out_7723395843437171411[227] = 0;
   out_7723395843437171411[228] = 0;
   out_7723395843437171411[229] = 0;
   out_7723395843437171411[230] = 0;
   out_7723395843437171411[231] = 0;
   out_7723395843437171411[232] = 0;
   out_7723395843437171411[233] = 0;
   out_7723395843437171411[234] = 0;
   out_7723395843437171411[235] = 0;
   out_7723395843437171411[236] = 0;
   out_7723395843437171411[237] = 0;
   out_7723395843437171411[238] = 0;
   out_7723395843437171411[239] = 0;
   out_7723395843437171411[240] = 0;
   out_7723395843437171411[241] = 1.0;
   out_7723395843437171411[242] = 0;
   out_7723395843437171411[243] = 0;
   out_7723395843437171411[244] = 0;
   out_7723395843437171411[245] = 0;
   out_7723395843437171411[246] = 0;
   out_7723395843437171411[247] = 0;
   out_7723395843437171411[248] = 0;
   out_7723395843437171411[249] = 0;
   out_7723395843437171411[250] = 0;
   out_7723395843437171411[251] = 0;
   out_7723395843437171411[252] = 0;
   out_7723395843437171411[253] = 0;
   out_7723395843437171411[254] = 0;
   out_7723395843437171411[255] = 0;
   out_7723395843437171411[256] = 0;
   out_7723395843437171411[257] = 0;
   out_7723395843437171411[258] = 0;
   out_7723395843437171411[259] = 0;
   out_7723395843437171411[260] = 0;
   out_7723395843437171411[261] = 0;
   out_7723395843437171411[262] = 0;
   out_7723395843437171411[263] = 1.0;
   out_7723395843437171411[264] = 0;
   out_7723395843437171411[265] = 0;
   out_7723395843437171411[266] = 0;
   out_7723395843437171411[267] = 0;
   out_7723395843437171411[268] = 0;
   out_7723395843437171411[269] = 0;
   out_7723395843437171411[270] = 0;
   out_7723395843437171411[271] = 0;
   out_7723395843437171411[272] = 0;
   out_7723395843437171411[273] = 0;
   out_7723395843437171411[274] = 0;
   out_7723395843437171411[275] = 0;
   out_7723395843437171411[276] = 0;
   out_7723395843437171411[277] = 0;
   out_7723395843437171411[278] = 0;
   out_7723395843437171411[279] = 0;
   out_7723395843437171411[280] = 0;
   out_7723395843437171411[281] = 0;
   out_7723395843437171411[282] = 0;
   out_7723395843437171411[283] = 0;
   out_7723395843437171411[284] = 0;
   out_7723395843437171411[285] = 1.0;
   out_7723395843437171411[286] = 0;
   out_7723395843437171411[287] = 0;
   out_7723395843437171411[288] = 0;
   out_7723395843437171411[289] = 0;
   out_7723395843437171411[290] = 0;
   out_7723395843437171411[291] = 0;
   out_7723395843437171411[292] = 0;
   out_7723395843437171411[293] = 0;
   out_7723395843437171411[294] = 0;
   out_7723395843437171411[295] = 0;
   out_7723395843437171411[296] = 0;
   out_7723395843437171411[297] = 0;
   out_7723395843437171411[298] = 0;
   out_7723395843437171411[299] = 0;
   out_7723395843437171411[300] = 0;
   out_7723395843437171411[301] = 0;
   out_7723395843437171411[302] = 0;
   out_7723395843437171411[303] = 0;
   out_7723395843437171411[304] = 0;
   out_7723395843437171411[305] = 0;
   out_7723395843437171411[306] = 0;
   out_7723395843437171411[307] = 1.0;
   out_7723395843437171411[308] = 0;
   out_7723395843437171411[309] = 0;
   out_7723395843437171411[310] = 0;
   out_7723395843437171411[311] = 0;
   out_7723395843437171411[312] = 0;
   out_7723395843437171411[313] = 0;
   out_7723395843437171411[314] = 0;
   out_7723395843437171411[315] = 0;
   out_7723395843437171411[316] = 0;
   out_7723395843437171411[317] = 0;
   out_7723395843437171411[318] = 0;
   out_7723395843437171411[319] = 0;
   out_7723395843437171411[320] = 0;
   out_7723395843437171411[321] = 0;
   out_7723395843437171411[322] = 0;
   out_7723395843437171411[323] = 0;
   out_7723395843437171411[324] = 0;
   out_7723395843437171411[325] = 0;
   out_7723395843437171411[326] = 0;
   out_7723395843437171411[327] = 0;
   out_7723395843437171411[328] = 0;
   out_7723395843437171411[329] = 1.0;
   out_7723395843437171411[330] = 0;
   out_7723395843437171411[331] = 0;
   out_7723395843437171411[332] = 0;
   out_7723395843437171411[333] = 0;
   out_7723395843437171411[334] = 0;
   out_7723395843437171411[335] = 0;
   out_7723395843437171411[336] = 0;
   out_7723395843437171411[337] = 0;
   out_7723395843437171411[338] = 0;
   out_7723395843437171411[339] = 0;
   out_7723395843437171411[340] = 0;
   out_7723395843437171411[341] = 0;
   out_7723395843437171411[342] = 0;
   out_7723395843437171411[343] = 0;
   out_7723395843437171411[344] = 0;
   out_7723395843437171411[345] = 0;
   out_7723395843437171411[346] = 0;
   out_7723395843437171411[347] = 0;
   out_7723395843437171411[348] = 0;
   out_7723395843437171411[349] = 0;
   out_7723395843437171411[350] = 0;
   out_7723395843437171411[351] = 1.0;
   out_7723395843437171411[352] = 0;
   out_7723395843437171411[353] = 0;
   out_7723395843437171411[354] = 0;
   out_7723395843437171411[355] = 0;
   out_7723395843437171411[356] = 0;
   out_7723395843437171411[357] = 0;
   out_7723395843437171411[358] = 0;
   out_7723395843437171411[359] = 0;
   out_7723395843437171411[360] = 0;
   out_7723395843437171411[361] = 0;
   out_7723395843437171411[362] = 0;
   out_7723395843437171411[363] = 0;
   out_7723395843437171411[364] = 0;
   out_7723395843437171411[365] = 0;
   out_7723395843437171411[366] = 0;
   out_7723395843437171411[367] = 0;
   out_7723395843437171411[368] = 0;
   out_7723395843437171411[369] = 0;
   out_7723395843437171411[370] = 0;
   out_7723395843437171411[371] = 0;
   out_7723395843437171411[372] = 0;
   out_7723395843437171411[373] = 1.0;
   out_7723395843437171411[374] = 0;
   out_7723395843437171411[375] = 0;
   out_7723395843437171411[376] = 0;
   out_7723395843437171411[377] = 0;
   out_7723395843437171411[378] = 0;
   out_7723395843437171411[379] = 0;
   out_7723395843437171411[380] = 0;
   out_7723395843437171411[381] = 0;
   out_7723395843437171411[382] = 0;
   out_7723395843437171411[383] = 0;
   out_7723395843437171411[384] = 0;
   out_7723395843437171411[385] = 0;
   out_7723395843437171411[386] = 0;
   out_7723395843437171411[387] = 0;
   out_7723395843437171411[388] = 0;
   out_7723395843437171411[389] = 0;
   out_7723395843437171411[390] = 0;
   out_7723395843437171411[391] = 0;
   out_7723395843437171411[392] = 0;
   out_7723395843437171411[393] = 0;
   out_7723395843437171411[394] = 0;
   out_7723395843437171411[395] = 1.0;
   out_7723395843437171411[396] = 0;
   out_7723395843437171411[397] = 0;
   out_7723395843437171411[398] = 0;
   out_7723395843437171411[399] = 0;
   out_7723395843437171411[400] = 0;
   out_7723395843437171411[401] = 0;
   out_7723395843437171411[402] = 0;
   out_7723395843437171411[403] = 0;
   out_7723395843437171411[404] = 0;
   out_7723395843437171411[405] = 0;
   out_7723395843437171411[406] = 0;
   out_7723395843437171411[407] = 0;
   out_7723395843437171411[408] = 0;
   out_7723395843437171411[409] = 0;
   out_7723395843437171411[410] = 0;
   out_7723395843437171411[411] = 0;
   out_7723395843437171411[412] = 0;
   out_7723395843437171411[413] = 0;
   out_7723395843437171411[414] = 0;
   out_7723395843437171411[415] = 0;
   out_7723395843437171411[416] = 0;
   out_7723395843437171411[417] = 1.0;
   out_7723395843437171411[418] = 0;
   out_7723395843437171411[419] = 0;
   out_7723395843437171411[420] = 0;
   out_7723395843437171411[421] = 0;
   out_7723395843437171411[422] = 0;
   out_7723395843437171411[423] = 0;
   out_7723395843437171411[424] = 0;
   out_7723395843437171411[425] = 0;
   out_7723395843437171411[426] = 0;
   out_7723395843437171411[427] = 0;
   out_7723395843437171411[428] = 0;
   out_7723395843437171411[429] = 0;
   out_7723395843437171411[430] = 0;
   out_7723395843437171411[431] = 0;
   out_7723395843437171411[432] = 0;
   out_7723395843437171411[433] = 0;
   out_7723395843437171411[434] = 0;
   out_7723395843437171411[435] = 0;
   out_7723395843437171411[436] = 0;
   out_7723395843437171411[437] = 0;
   out_7723395843437171411[438] = 0;
   out_7723395843437171411[439] = 1.0;
   out_7723395843437171411[440] = 0;
   out_7723395843437171411[441] = 0;
   out_7723395843437171411[442] = 0;
   out_7723395843437171411[443] = 0;
   out_7723395843437171411[444] = 0;
   out_7723395843437171411[445] = 0;
   out_7723395843437171411[446] = 0;
   out_7723395843437171411[447] = 0;
   out_7723395843437171411[448] = 0;
   out_7723395843437171411[449] = 0;
   out_7723395843437171411[450] = 0;
   out_7723395843437171411[451] = 0;
   out_7723395843437171411[452] = 0;
   out_7723395843437171411[453] = 0;
   out_7723395843437171411[454] = 0;
   out_7723395843437171411[455] = 0;
   out_7723395843437171411[456] = 0;
   out_7723395843437171411[457] = 0;
   out_7723395843437171411[458] = 0;
   out_7723395843437171411[459] = 0;
   out_7723395843437171411[460] = 0;
   out_7723395843437171411[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_7654632586872644998) {
   out_7654632586872644998[0] = dt*state[7] + state[0];
   out_7654632586872644998[1] = dt*state[8] + state[1];
   out_7654632586872644998[2] = dt*state[9] + state[2];
   out_7654632586872644998[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_7654632586872644998[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_7654632586872644998[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_7654632586872644998[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_7654632586872644998[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_7654632586872644998[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_7654632586872644998[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_7654632586872644998[10] = state[10];
   out_7654632586872644998[11] = state[11];
   out_7654632586872644998[12] = state[12];
   out_7654632586872644998[13] = state[13];
   out_7654632586872644998[14] = state[14];
   out_7654632586872644998[15] = state[15];
   out_7654632586872644998[16] = state[16];
   out_7654632586872644998[17] = state[17];
   out_7654632586872644998[18] = state[18];
   out_7654632586872644998[19] = state[19];
   out_7654632586872644998[20] = state[20];
   out_7654632586872644998[21] = state[21];
}
void F_fun(double *state, double dt, double *out_3514164014686322129) {
   out_3514164014686322129[0] = 1;
   out_3514164014686322129[1] = 0;
   out_3514164014686322129[2] = 0;
   out_3514164014686322129[3] = 0;
   out_3514164014686322129[4] = 0;
   out_3514164014686322129[5] = 0;
   out_3514164014686322129[6] = dt;
   out_3514164014686322129[7] = 0;
   out_3514164014686322129[8] = 0;
   out_3514164014686322129[9] = 0;
   out_3514164014686322129[10] = 0;
   out_3514164014686322129[11] = 0;
   out_3514164014686322129[12] = 0;
   out_3514164014686322129[13] = 0;
   out_3514164014686322129[14] = 0;
   out_3514164014686322129[15] = 0;
   out_3514164014686322129[16] = 0;
   out_3514164014686322129[17] = 0;
   out_3514164014686322129[18] = 0;
   out_3514164014686322129[19] = 0;
   out_3514164014686322129[20] = 0;
   out_3514164014686322129[21] = 0;
   out_3514164014686322129[22] = 1;
   out_3514164014686322129[23] = 0;
   out_3514164014686322129[24] = 0;
   out_3514164014686322129[25] = 0;
   out_3514164014686322129[26] = 0;
   out_3514164014686322129[27] = 0;
   out_3514164014686322129[28] = dt;
   out_3514164014686322129[29] = 0;
   out_3514164014686322129[30] = 0;
   out_3514164014686322129[31] = 0;
   out_3514164014686322129[32] = 0;
   out_3514164014686322129[33] = 0;
   out_3514164014686322129[34] = 0;
   out_3514164014686322129[35] = 0;
   out_3514164014686322129[36] = 0;
   out_3514164014686322129[37] = 0;
   out_3514164014686322129[38] = 0;
   out_3514164014686322129[39] = 0;
   out_3514164014686322129[40] = 0;
   out_3514164014686322129[41] = 0;
   out_3514164014686322129[42] = 0;
   out_3514164014686322129[43] = 0;
   out_3514164014686322129[44] = 1;
   out_3514164014686322129[45] = 0;
   out_3514164014686322129[46] = 0;
   out_3514164014686322129[47] = 0;
   out_3514164014686322129[48] = 0;
   out_3514164014686322129[49] = 0;
   out_3514164014686322129[50] = dt;
   out_3514164014686322129[51] = 0;
   out_3514164014686322129[52] = 0;
   out_3514164014686322129[53] = 0;
   out_3514164014686322129[54] = 0;
   out_3514164014686322129[55] = 0;
   out_3514164014686322129[56] = 0;
   out_3514164014686322129[57] = 0;
   out_3514164014686322129[58] = 0;
   out_3514164014686322129[59] = 0;
   out_3514164014686322129[60] = 0;
   out_3514164014686322129[61] = 0;
   out_3514164014686322129[62] = 0;
   out_3514164014686322129[63] = 0;
   out_3514164014686322129[64] = 0;
   out_3514164014686322129[65] = 0;
   out_3514164014686322129[66] = 1;
   out_3514164014686322129[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3514164014686322129[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_3514164014686322129[69] = 0;
   out_3514164014686322129[70] = 0;
   out_3514164014686322129[71] = 0;
   out_3514164014686322129[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3514164014686322129[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3514164014686322129[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3514164014686322129[75] = 0;
   out_3514164014686322129[76] = 0;
   out_3514164014686322129[77] = 0;
   out_3514164014686322129[78] = 0;
   out_3514164014686322129[79] = 0;
   out_3514164014686322129[80] = 0;
   out_3514164014686322129[81] = 0;
   out_3514164014686322129[82] = 0;
   out_3514164014686322129[83] = 0;
   out_3514164014686322129[84] = 0;
   out_3514164014686322129[85] = 0;
   out_3514164014686322129[86] = 0;
   out_3514164014686322129[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3514164014686322129[88] = 1;
   out_3514164014686322129[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_3514164014686322129[90] = 0;
   out_3514164014686322129[91] = 0;
   out_3514164014686322129[92] = 0;
   out_3514164014686322129[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3514164014686322129[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3514164014686322129[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3514164014686322129[96] = 0;
   out_3514164014686322129[97] = 0;
   out_3514164014686322129[98] = 0;
   out_3514164014686322129[99] = 0;
   out_3514164014686322129[100] = 0;
   out_3514164014686322129[101] = 0;
   out_3514164014686322129[102] = 0;
   out_3514164014686322129[103] = 0;
   out_3514164014686322129[104] = 0;
   out_3514164014686322129[105] = 0;
   out_3514164014686322129[106] = 0;
   out_3514164014686322129[107] = 0;
   out_3514164014686322129[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_3514164014686322129[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_3514164014686322129[110] = 1;
   out_3514164014686322129[111] = 0;
   out_3514164014686322129[112] = 0;
   out_3514164014686322129[113] = 0;
   out_3514164014686322129[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3514164014686322129[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3514164014686322129[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3514164014686322129[117] = 0;
   out_3514164014686322129[118] = 0;
   out_3514164014686322129[119] = 0;
   out_3514164014686322129[120] = 0;
   out_3514164014686322129[121] = 0;
   out_3514164014686322129[122] = 0;
   out_3514164014686322129[123] = 0;
   out_3514164014686322129[124] = 0;
   out_3514164014686322129[125] = 0;
   out_3514164014686322129[126] = 0;
   out_3514164014686322129[127] = 0;
   out_3514164014686322129[128] = 0;
   out_3514164014686322129[129] = 0;
   out_3514164014686322129[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3514164014686322129[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_3514164014686322129[132] = 1;
   out_3514164014686322129[133] = 0;
   out_3514164014686322129[134] = 0;
   out_3514164014686322129[135] = 0;
   out_3514164014686322129[136] = 0;
   out_3514164014686322129[137] = 0;
   out_3514164014686322129[138] = 0;
   out_3514164014686322129[139] = 0;
   out_3514164014686322129[140] = 0;
   out_3514164014686322129[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3514164014686322129[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3514164014686322129[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3514164014686322129[144] = 0;
   out_3514164014686322129[145] = 0;
   out_3514164014686322129[146] = 0;
   out_3514164014686322129[147] = 0;
   out_3514164014686322129[148] = 0;
   out_3514164014686322129[149] = 0;
   out_3514164014686322129[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3514164014686322129[151] = 0;
   out_3514164014686322129[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_3514164014686322129[153] = 0;
   out_3514164014686322129[154] = 1;
   out_3514164014686322129[155] = 0;
   out_3514164014686322129[156] = 0;
   out_3514164014686322129[157] = 0;
   out_3514164014686322129[158] = 0;
   out_3514164014686322129[159] = 0;
   out_3514164014686322129[160] = 0;
   out_3514164014686322129[161] = 0;
   out_3514164014686322129[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3514164014686322129[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3514164014686322129[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3514164014686322129[165] = 0;
   out_3514164014686322129[166] = 0;
   out_3514164014686322129[167] = 0;
   out_3514164014686322129[168] = 0;
   out_3514164014686322129[169] = 0;
   out_3514164014686322129[170] = 0;
   out_3514164014686322129[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_3514164014686322129[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_3514164014686322129[173] = 0;
   out_3514164014686322129[174] = 0;
   out_3514164014686322129[175] = 0;
   out_3514164014686322129[176] = 1;
   out_3514164014686322129[177] = 0;
   out_3514164014686322129[178] = 0;
   out_3514164014686322129[179] = 0;
   out_3514164014686322129[180] = 0;
   out_3514164014686322129[181] = 0;
   out_3514164014686322129[182] = 0;
   out_3514164014686322129[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3514164014686322129[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3514164014686322129[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3514164014686322129[186] = 0;
   out_3514164014686322129[187] = 0;
   out_3514164014686322129[188] = 0;
   out_3514164014686322129[189] = 0;
   out_3514164014686322129[190] = 0;
   out_3514164014686322129[191] = 0;
   out_3514164014686322129[192] = 0;
   out_3514164014686322129[193] = 0;
   out_3514164014686322129[194] = 0;
   out_3514164014686322129[195] = 0;
   out_3514164014686322129[196] = 0;
   out_3514164014686322129[197] = 0;
   out_3514164014686322129[198] = 1;
   out_3514164014686322129[199] = 0;
   out_3514164014686322129[200] = 0;
   out_3514164014686322129[201] = 0;
   out_3514164014686322129[202] = 0;
   out_3514164014686322129[203] = 0;
   out_3514164014686322129[204] = 0;
   out_3514164014686322129[205] = 0;
   out_3514164014686322129[206] = 0;
   out_3514164014686322129[207] = 0;
   out_3514164014686322129[208] = 0;
   out_3514164014686322129[209] = 0;
   out_3514164014686322129[210] = 0;
   out_3514164014686322129[211] = 0;
   out_3514164014686322129[212] = 0;
   out_3514164014686322129[213] = 0;
   out_3514164014686322129[214] = 0;
   out_3514164014686322129[215] = 0;
   out_3514164014686322129[216] = 0;
   out_3514164014686322129[217] = 0;
   out_3514164014686322129[218] = 0;
   out_3514164014686322129[219] = 0;
   out_3514164014686322129[220] = 1;
   out_3514164014686322129[221] = 0;
   out_3514164014686322129[222] = 0;
   out_3514164014686322129[223] = 0;
   out_3514164014686322129[224] = 0;
   out_3514164014686322129[225] = 0;
   out_3514164014686322129[226] = 0;
   out_3514164014686322129[227] = 0;
   out_3514164014686322129[228] = 0;
   out_3514164014686322129[229] = 0;
   out_3514164014686322129[230] = 0;
   out_3514164014686322129[231] = 0;
   out_3514164014686322129[232] = 0;
   out_3514164014686322129[233] = 0;
   out_3514164014686322129[234] = 0;
   out_3514164014686322129[235] = 0;
   out_3514164014686322129[236] = 0;
   out_3514164014686322129[237] = 0;
   out_3514164014686322129[238] = 0;
   out_3514164014686322129[239] = 0;
   out_3514164014686322129[240] = 0;
   out_3514164014686322129[241] = 0;
   out_3514164014686322129[242] = 1;
   out_3514164014686322129[243] = 0;
   out_3514164014686322129[244] = 0;
   out_3514164014686322129[245] = 0;
   out_3514164014686322129[246] = 0;
   out_3514164014686322129[247] = 0;
   out_3514164014686322129[248] = 0;
   out_3514164014686322129[249] = 0;
   out_3514164014686322129[250] = 0;
   out_3514164014686322129[251] = 0;
   out_3514164014686322129[252] = 0;
   out_3514164014686322129[253] = 0;
   out_3514164014686322129[254] = 0;
   out_3514164014686322129[255] = 0;
   out_3514164014686322129[256] = 0;
   out_3514164014686322129[257] = 0;
   out_3514164014686322129[258] = 0;
   out_3514164014686322129[259] = 0;
   out_3514164014686322129[260] = 0;
   out_3514164014686322129[261] = 0;
   out_3514164014686322129[262] = 0;
   out_3514164014686322129[263] = 0;
   out_3514164014686322129[264] = 1;
   out_3514164014686322129[265] = 0;
   out_3514164014686322129[266] = 0;
   out_3514164014686322129[267] = 0;
   out_3514164014686322129[268] = 0;
   out_3514164014686322129[269] = 0;
   out_3514164014686322129[270] = 0;
   out_3514164014686322129[271] = 0;
   out_3514164014686322129[272] = 0;
   out_3514164014686322129[273] = 0;
   out_3514164014686322129[274] = 0;
   out_3514164014686322129[275] = 0;
   out_3514164014686322129[276] = 0;
   out_3514164014686322129[277] = 0;
   out_3514164014686322129[278] = 0;
   out_3514164014686322129[279] = 0;
   out_3514164014686322129[280] = 0;
   out_3514164014686322129[281] = 0;
   out_3514164014686322129[282] = 0;
   out_3514164014686322129[283] = 0;
   out_3514164014686322129[284] = 0;
   out_3514164014686322129[285] = 0;
   out_3514164014686322129[286] = 1;
   out_3514164014686322129[287] = 0;
   out_3514164014686322129[288] = 0;
   out_3514164014686322129[289] = 0;
   out_3514164014686322129[290] = 0;
   out_3514164014686322129[291] = 0;
   out_3514164014686322129[292] = 0;
   out_3514164014686322129[293] = 0;
   out_3514164014686322129[294] = 0;
   out_3514164014686322129[295] = 0;
   out_3514164014686322129[296] = 0;
   out_3514164014686322129[297] = 0;
   out_3514164014686322129[298] = 0;
   out_3514164014686322129[299] = 0;
   out_3514164014686322129[300] = 0;
   out_3514164014686322129[301] = 0;
   out_3514164014686322129[302] = 0;
   out_3514164014686322129[303] = 0;
   out_3514164014686322129[304] = 0;
   out_3514164014686322129[305] = 0;
   out_3514164014686322129[306] = 0;
   out_3514164014686322129[307] = 0;
   out_3514164014686322129[308] = 1;
   out_3514164014686322129[309] = 0;
   out_3514164014686322129[310] = 0;
   out_3514164014686322129[311] = 0;
   out_3514164014686322129[312] = 0;
   out_3514164014686322129[313] = 0;
   out_3514164014686322129[314] = 0;
   out_3514164014686322129[315] = 0;
   out_3514164014686322129[316] = 0;
   out_3514164014686322129[317] = 0;
   out_3514164014686322129[318] = 0;
   out_3514164014686322129[319] = 0;
   out_3514164014686322129[320] = 0;
   out_3514164014686322129[321] = 0;
   out_3514164014686322129[322] = 0;
   out_3514164014686322129[323] = 0;
   out_3514164014686322129[324] = 0;
   out_3514164014686322129[325] = 0;
   out_3514164014686322129[326] = 0;
   out_3514164014686322129[327] = 0;
   out_3514164014686322129[328] = 0;
   out_3514164014686322129[329] = 0;
   out_3514164014686322129[330] = 1;
   out_3514164014686322129[331] = 0;
   out_3514164014686322129[332] = 0;
   out_3514164014686322129[333] = 0;
   out_3514164014686322129[334] = 0;
   out_3514164014686322129[335] = 0;
   out_3514164014686322129[336] = 0;
   out_3514164014686322129[337] = 0;
   out_3514164014686322129[338] = 0;
   out_3514164014686322129[339] = 0;
   out_3514164014686322129[340] = 0;
   out_3514164014686322129[341] = 0;
   out_3514164014686322129[342] = 0;
   out_3514164014686322129[343] = 0;
   out_3514164014686322129[344] = 0;
   out_3514164014686322129[345] = 0;
   out_3514164014686322129[346] = 0;
   out_3514164014686322129[347] = 0;
   out_3514164014686322129[348] = 0;
   out_3514164014686322129[349] = 0;
   out_3514164014686322129[350] = 0;
   out_3514164014686322129[351] = 0;
   out_3514164014686322129[352] = 1;
   out_3514164014686322129[353] = 0;
   out_3514164014686322129[354] = 0;
   out_3514164014686322129[355] = 0;
   out_3514164014686322129[356] = 0;
   out_3514164014686322129[357] = 0;
   out_3514164014686322129[358] = 0;
   out_3514164014686322129[359] = 0;
   out_3514164014686322129[360] = 0;
   out_3514164014686322129[361] = 0;
   out_3514164014686322129[362] = 0;
   out_3514164014686322129[363] = 0;
   out_3514164014686322129[364] = 0;
   out_3514164014686322129[365] = 0;
   out_3514164014686322129[366] = 0;
   out_3514164014686322129[367] = 0;
   out_3514164014686322129[368] = 0;
   out_3514164014686322129[369] = 0;
   out_3514164014686322129[370] = 0;
   out_3514164014686322129[371] = 0;
   out_3514164014686322129[372] = 0;
   out_3514164014686322129[373] = 0;
   out_3514164014686322129[374] = 1;
   out_3514164014686322129[375] = 0;
   out_3514164014686322129[376] = 0;
   out_3514164014686322129[377] = 0;
   out_3514164014686322129[378] = 0;
   out_3514164014686322129[379] = 0;
   out_3514164014686322129[380] = 0;
   out_3514164014686322129[381] = 0;
   out_3514164014686322129[382] = 0;
   out_3514164014686322129[383] = 0;
   out_3514164014686322129[384] = 0;
   out_3514164014686322129[385] = 0;
   out_3514164014686322129[386] = 0;
   out_3514164014686322129[387] = 0;
   out_3514164014686322129[388] = 0;
   out_3514164014686322129[389] = 0;
   out_3514164014686322129[390] = 0;
   out_3514164014686322129[391] = 0;
   out_3514164014686322129[392] = 0;
   out_3514164014686322129[393] = 0;
   out_3514164014686322129[394] = 0;
   out_3514164014686322129[395] = 0;
   out_3514164014686322129[396] = 1;
   out_3514164014686322129[397] = 0;
   out_3514164014686322129[398] = 0;
   out_3514164014686322129[399] = 0;
   out_3514164014686322129[400] = 0;
   out_3514164014686322129[401] = 0;
   out_3514164014686322129[402] = 0;
   out_3514164014686322129[403] = 0;
   out_3514164014686322129[404] = 0;
   out_3514164014686322129[405] = 0;
   out_3514164014686322129[406] = 0;
   out_3514164014686322129[407] = 0;
   out_3514164014686322129[408] = 0;
   out_3514164014686322129[409] = 0;
   out_3514164014686322129[410] = 0;
   out_3514164014686322129[411] = 0;
   out_3514164014686322129[412] = 0;
   out_3514164014686322129[413] = 0;
   out_3514164014686322129[414] = 0;
   out_3514164014686322129[415] = 0;
   out_3514164014686322129[416] = 0;
   out_3514164014686322129[417] = 0;
   out_3514164014686322129[418] = 1;
   out_3514164014686322129[419] = 0;
   out_3514164014686322129[420] = 0;
   out_3514164014686322129[421] = 0;
   out_3514164014686322129[422] = 0;
   out_3514164014686322129[423] = 0;
   out_3514164014686322129[424] = 0;
   out_3514164014686322129[425] = 0;
   out_3514164014686322129[426] = 0;
   out_3514164014686322129[427] = 0;
   out_3514164014686322129[428] = 0;
   out_3514164014686322129[429] = 0;
   out_3514164014686322129[430] = 0;
   out_3514164014686322129[431] = 0;
   out_3514164014686322129[432] = 0;
   out_3514164014686322129[433] = 0;
   out_3514164014686322129[434] = 0;
   out_3514164014686322129[435] = 0;
   out_3514164014686322129[436] = 0;
   out_3514164014686322129[437] = 0;
   out_3514164014686322129[438] = 0;
   out_3514164014686322129[439] = 0;
   out_3514164014686322129[440] = 1;
}
void h_4(double *state, double *unused, double *out_4597397267778489686) {
   out_4597397267778489686[0] = state[10] + state[13];
   out_4597397267778489686[1] = state[11] + state[14];
   out_4597397267778489686[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_7541359671816305160) {
   out_7541359671816305160[0] = 0;
   out_7541359671816305160[1] = 0;
   out_7541359671816305160[2] = 0;
   out_7541359671816305160[3] = 0;
   out_7541359671816305160[4] = 0;
   out_7541359671816305160[5] = 0;
   out_7541359671816305160[6] = 0;
   out_7541359671816305160[7] = 0;
   out_7541359671816305160[8] = 0;
   out_7541359671816305160[9] = 0;
   out_7541359671816305160[10] = 1;
   out_7541359671816305160[11] = 0;
   out_7541359671816305160[12] = 0;
   out_7541359671816305160[13] = 1;
   out_7541359671816305160[14] = 0;
   out_7541359671816305160[15] = 0;
   out_7541359671816305160[16] = 0;
   out_7541359671816305160[17] = 0;
   out_7541359671816305160[18] = 0;
   out_7541359671816305160[19] = 0;
   out_7541359671816305160[20] = 0;
   out_7541359671816305160[21] = 0;
   out_7541359671816305160[22] = 0;
   out_7541359671816305160[23] = 0;
   out_7541359671816305160[24] = 0;
   out_7541359671816305160[25] = 0;
   out_7541359671816305160[26] = 0;
   out_7541359671816305160[27] = 0;
   out_7541359671816305160[28] = 0;
   out_7541359671816305160[29] = 0;
   out_7541359671816305160[30] = 0;
   out_7541359671816305160[31] = 0;
   out_7541359671816305160[32] = 0;
   out_7541359671816305160[33] = 1;
   out_7541359671816305160[34] = 0;
   out_7541359671816305160[35] = 0;
   out_7541359671816305160[36] = 1;
   out_7541359671816305160[37] = 0;
   out_7541359671816305160[38] = 0;
   out_7541359671816305160[39] = 0;
   out_7541359671816305160[40] = 0;
   out_7541359671816305160[41] = 0;
   out_7541359671816305160[42] = 0;
   out_7541359671816305160[43] = 0;
   out_7541359671816305160[44] = 0;
   out_7541359671816305160[45] = 0;
   out_7541359671816305160[46] = 0;
   out_7541359671816305160[47] = 0;
   out_7541359671816305160[48] = 0;
   out_7541359671816305160[49] = 0;
   out_7541359671816305160[50] = 0;
   out_7541359671816305160[51] = 0;
   out_7541359671816305160[52] = 0;
   out_7541359671816305160[53] = 0;
   out_7541359671816305160[54] = 0;
   out_7541359671816305160[55] = 0;
   out_7541359671816305160[56] = 1;
   out_7541359671816305160[57] = 0;
   out_7541359671816305160[58] = 0;
   out_7541359671816305160[59] = 1;
   out_7541359671816305160[60] = 0;
   out_7541359671816305160[61] = 0;
   out_7541359671816305160[62] = 0;
   out_7541359671816305160[63] = 0;
   out_7541359671816305160[64] = 0;
   out_7541359671816305160[65] = 0;
}
void h_9(double *state, double *unused, double *out_1228896713598557772) {
   out_1228896713598557772[0] = state[10];
   out_1228896713598557772[1] = state[11];
   out_1228896713598557772[2] = state[12];
}
void H_9(double *state, double *unused, double *out_254140736551857690) {
   out_254140736551857690[0] = 0;
   out_254140736551857690[1] = 0;
   out_254140736551857690[2] = 0;
   out_254140736551857690[3] = 0;
   out_254140736551857690[4] = 0;
   out_254140736551857690[5] = 0;
   out_254140736551857690[6] = 0;
   out_254140736551857690[7] = 0;
   out_254140736551857690[8] = 0;
   out_254140736551857690[9] = 0;
   out_254140736551857690[10] = 1;
   out_254140736551857690[11] = 0;
   out_254140736551857690[12] = 0;
   out_254140736551857690[13] = 0;
   out_254140736551857690[14] = 0;
   out_254140736551857690[15] = 0;
   out_254140736551857690[16] = 0;
   out_254140736551857690[17] = 0;
   out_254140736551857690[18] = 0;
   out_254140736551857690[19] = 0;
   out_254140736551857690[20] = 0;
   out_254140736551857690[21] = 0;
   out_254140736551857690[22] = 0;
   out_254140736551857690[23] = 0;
   out_254140736551857690[24] = 0;
   out_254140736551857690[25] = 0;
   out_254140736551857690[26] = 0;
   out_254140736551857690[27] = 0;
   out_254140736551857690[28] = 0;
   out_254140736551857690[29] = 0;
   out_254140736551857690[30] = 0;
   out_254140736551857690[31] = 0;
   out_254140736551857690[32] = 0;
   out_254140736551857690[33] = 1;
   out_254140736551857690[34] = 0;
   out_254140736551857690[35] = 0;
   out_254140736551857690[36] = 0;
   out_254140736551857690[37] = 0;
   out_254140736551857690[38] = 0;
   out_254140736551857690[39] = 0;
   out_254140736551857690[40] = 0;
   out_254140736551857690[41] = 0;
   out_254140736551857690[42] = 0;
   out_254140736551857690[43] = 0;
   out_254140736551857690[44] = 0;
   out_254140736551857690[45] = 0;
   out_254140736551857690[46] = 0;
   out_254140736551857690[47] = 0;
   out_254140736551857690[48] = 0;
   out_254140736551857690[49] = 0;
   out_254140736551857690[50] = 0;
   out_254140736551857690[51] = 0;
   out_254140736551857690[52] = 0;
   out_254140736551857690[53] = 0;
   out_254140736551857690[54] = 0;
   out_254140736551857690[55] = 0;
   out_254140736551857690[56] = 1;
   out_254140736551857690[57] = 0;
   out_254140736551857690[58] = 0;
   out_254140736551857690[59] = 0;
   out_254140736551857690[60] = 0;
   out_254140736551857690[61] = 0;
   out_254140736551857690[62] = 0;
   out_254140736551857690[63] = 0;
   out_254140736551857690[64] = 0;
   out_254140736551857690[65] = 0;
}
void h_10(double *state, double *unused, double *out_3864771250231827369) {
   out_3864771250231827369[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_3864771250231827369[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_3864771250231827369[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_7243155102400884539) {
   out_7243155102400884539[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7243155102400884539[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7243155102400884539[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_7243155102400884539[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7243155102400884539[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7243155102400884539[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7243155102400884539[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7243155102400884539[7] = 0;
   out_7243155102400884539[8] = 0;
   out_7243155102400884539[9] = 0;
   out_7243155102400884539[10] = 0;
   out_7243155102400884539[11] = 0;
   out_7243155102400884539[12] = 0;
   out_7243155102400884539[13] = 0;
   out_7243155102400884539[14] = 0;
   out_7243155102400884539[15] = 0;
   out_7243155102400884539[16] = 1;
   out_7243155102400884539[17] = 0;
   out_7243155102400884539[18] = 0;
   out_7243155102400884539[19] = 1;
   out_7243155102400884539[20] = 0;
   out_7243155102400884539[21] = 0;
   out_7243155102400884539[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7243155102400884539[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7243155102400884539[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_7243155102400884539[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7243155102400884539[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7243155102400884539[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7243155102400884539[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7243155102400884539[29] = 0;
   out_7243155102400884539[30] = 0;
   out_7243155102400884539[31] = 0;
   out_7243155102400884539[32] = 0;
   out_7243155102400884539[33] = 0;
   out_7243155102400884539[34] = 0;
   out_7243155102400884539[35] = 0;
   out_7243155102400884539[36] = 0;
   out_7243155102400884539[37] = 0;
   out_7243155102400884539[38] = 0;
   out_7243155102400884539[39] = 1;
   out_7243155102400884539[40] = 0;
   out_7243155102400884539[41] = 0;
   out_7243155102400884539[42] = 1;
   out_7243155102400884539[43] = 0;
   out_7243155102400884539[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_7243155102400884539[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_7243155102400884539[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7243155102400884539[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7243155102400884539[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7243155102400884539[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7243155102400884539[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7243155102400884539[51] = 0;
   out_7243155102400884539[52] = 0;
   out_7243155102400884539[53] = 0;
   out_7243155102400884539[54] = 0;
   out_7243155102400884539[55] = 0;
   out_7243155102400884539[56] = 0;
   out_7243155102400884539[57] = 0;
   out_7243155102400884539[58] = 0;
   out_7243155102400884539[59] = 0;
   out_7243155102400884539[60] = 0;
   out_7243155102400884539[61] = 0;
   out_7243155102400884539[62] = 1;
   out_7243155102400884539[63] = 0;
   out_7243155102400884539[64] = 0;
   out_7243155102400884539[65] = 1;
}
void h_12(double *state, double *unused, double *out_208960420128193132) {
   out_208960420128193132[0] = state[0];
   out_208960420128193132[1] = state[1];
   out_208960420128193132[2] = state[2];
}
void H_12(double *state, double *unused, double *out_125768641866145332) {
   out_125768641866145332[0] = 1;
   out_125768641866145332[1] = 0;
   out_125768641866145332[2] = 0;
   out_125768641866145332[3] = 0;
   out_125768641866145332[4] = 0;
   out_125768641866145332[5] = 0;
   out_125768641866145332[6] = 0;
   out_125768641866145332[7] = 0;
   out_125768641866145332[8] = 0;
   out_125768641866145332[9] = 0;
   out_125768641866145332[10] = 0;
   out_125768641866145332[11] = 0;
   out_125768641866145332[12] = 0;
   out_125768641866145332[13] = 0;
   out_125768641866145332[14] = 0;
   out_125768641866145332[15] = 0;
   out_125768641866145332[16] = 0;
   out_125768641866145332[17] = 0;
   out_125768641866145332[18] = 0;
   out_125768641866145332[19] = 0;
   out_125768641866145332[20] = 0;
   out_125768641866145332[21] = 0;
   out_125768641866145332[22] = 0;
   out_125768641866145332[23] = 1;
   out_125768641866145332[24] = 0;
   out_125768641866145332[25] = 0;
   out_125768641866145332[26] = 0;
   out_125768641866145332[27] = 0;
   out_125768641866145332[28] = 0;
   out_125768641866145332[29] = 0;
   out_125768641866145332[30] = 0;
   out_125768641866145332[31] = 0;
   out_125768641866145332[32] = 0;
   out_125768641866145332[33] = 0;
   out_125768641866145332[34] = 0;
   out_125768641866145332[35] = 0;
   out_125768641866145332[36] = 0;
   out_125768641866145332[37] = 0;
   out_125768641866145332[38] = 0;
   out_125768641866145332[39] = 0;
   out_125768641866145332[40] = 0;
   out_125768641866145332[41] = 0;
   out_125768641866145332[42] = 0;
   out_125768641866145332[43] = 0;
   out_125768641866145332[44] = 0;
   out_125768641866145332[45] = 0;
   out_125768641866145332[46] = 1;
   out_125768641866145332[47] = 0;
   out_125768641866145332[48] = 0;
   out_125768641866145332[49] = 0;
   out_125768641866145332[50] = 0;
   out_125768641866145332[51] = 0;
   out_125768641866145332[52] = 0;
   out_125768641866145332[53] = 0;
   out_125768641866145332[54] = 0;
   out_125768641866145332[55] = 0;
   out_125768641866145332[56] = 0;
   out_125768641866145332[57] = 0;
   out_125768641866145332[58] = 0;
   out_125768641866145332[59] = 0;
   out_125768641866145332[60] = 0;
   out_125768641866145332[61] = 0;
   out_125768641866145332[62] = 0;
   out_125768641866145332[63] = 0;
   out_125768641866145332[64] = 0;
   out_125768641866145332[65] = 0;
}
void h_35(double *state, double *unused, double *out_4664419399287101723) {
   out_4664419399287101723[0] = state[7];
   out_4664419399287101723[1] = state[8];
   out_4664419399287101723[2] = state[9];
}
void H_35(double *state, double *unused, double *out_2871331674191159041) {
   out_2871331674191159041[0] = 0;
   out_2871331674191159041[1] = 0;
   out_2871331674191159041[2] = 0;
   out_2871331674191159041[3] = 0;
   out_2871331674191159041[4] = 0;
   out_2871331674191159041[5] = 0;
   out_2871331674191159041[6] = 0;
   out_2871331674191159041[7] = 1;
   out_2871331674191159041[8] = 0;
   out_2871331674191159041[9] = 0;
   out_2871331674191159041[10] = 0;
   out_2871331674191159041[11] = 0;
   out_2871331674191159041[12] = 0;
   out_2871331674191159041[13] = 0;
   out_2871331674191159041[14] = 0;
   out_2871331674191159041[15] = 0;
   out_2871331674191159041[16] = 0;
   out_2871331674191159041[17] = 0;
   out_2871331674191159041[18] = 0;
   out_2871331674191159041[19] = 0;
   out_2871331674191159041[20] = 0;
   out_2871331674191159041[21] = 0;
   out_2871331674191159041[22] = 0;
   out_2871331674191159041[23] = 0;
   out_2871331674191159041[24] = 0;
   out_2871331674191159041[25] = 0;
   out_2871331674191159041[26] = 0;
   out_2871331674191159041[27] = 0;
   out_2871331674191159041[28] = 0;
   out_2871331674191159041[29] = 0;
   out_2871331674191159041[30] = 1;
   out_2871331674191159041[31] = 0;
   out_2871331674191159041[32] = 0;
   out_2871331674191159041[33] = 0;
   out_2871331674191159041[34] = 0;
   out_2871331674191159041[35] = 0;
   out_2871331674191159041[36] = 0;
   out_2871331674191159041[37] = 0;
   out_2871331674191159041[38] = 0;
   out_2871331674191159041[39] = 0;
   out_2871331674191159041[40] = 0;
   out_2871331674191159041[41] = 0;
   out_2871331674191159041[42] = 0;
   out_2871331674191159041[43] = 0;
   out_2871331674191159041[44] = 0;
   out_2871331674191159041[45] = 0;
   out_2871331674191159041[46] = 0;
   out_2871331674191159041[47] = 0;
   out_2871331674191159041[48] = 0;
   out_2871331674191159041[49] = 0;
   out_2871331674191159041[50] = 0;
   out_2871331674191159041[51] = 0;
   out_2871331674191159041[52] = 0;
   out_2871331674191159041[53] = 1;
   out_2871331674191159041[54] = 0;
   out_2871331674191159041[55] = 0;
   out_2871331674191159041[56] = 0;
   out_2871331674191159041[57] = 0;
   out_2871331674191159041[58] = 0;
   out_2871331674191159041[59] = 0;
   out_2871331674191159041[60] = 0;
   out_2871331674191159041[61] = 0;
   out_2871331674191159041[62] = 0;
   out_2871331674191159041[63] = 0;
   out_2871331674191159041[64] = 0;
   out_2871331674191159041[65] = 0;
}
void h_32(double *state, double *unused, double *out_3012430670723782515) {
   out_3012430670723782515[0] = state[3];
   out_3012430670723782515[1] = state[4];
   out_3012430670723782515[2] = state[5];
   out_3012430670723782515[3] = state[6];
}
void H_32(double *state, double *unused, double *out_5819537124154597386) {
   out_5819537124154597386[0] = 0;
   out_5819537124154597386[1] = 0;
   out_5819537124154597386[2] = 0;
   out_5819537124154597386[3] = 1;
   out_5819537124154597386[4] = 0;
   out_5819537124154597386[5] = 0;
   out_5819537124154597386[6] = 0;
   out_5819537124154597386[7] = 0;
   out_5819537124154597386[8] = 0;
   out_5819537124154597386[9] = 0;
   out_5819537124154597386[10] = 0;
   out_5819537124154597386[11] = 0;
   out_5819537124154597386[12] = 0;
   out_5819537124154597386[13] = 0;
   out_5819537124154597386[14] = 0;
   out_5819537124154597386[15] = 0;
   out_5819537124154597386[16] = 0;
   out_5819537124154597386[17] = 0;
   out_5819537124154597386[18] = 0;
   out_5819537124154597386[19] = 0;
   out_5819537124154597386[20] = 0;
   out_5819537124154597386[21] = 0;
   out_5819537124154597386[22] = 0;
   out_5819537124154597386[23] = 0;
   out_5819537124154597386[24] = 0;
   out_5819537124154597386[25] = 0;
   out_5819537124154597386[26] = 1;
   out_5819537124154597386[27] = 0;
   out_5819537124154597386[28] = 0;
   out_5819537124154597386[29] = 0;
   out_5819537124154597386[30] = 0;
   out_5819537124154597386[31] = 0;
   out_5819537124154597386[32] = 0;
   out_5819537124154597386[33] = 0;
   out_5819537124154597386[34] = 0;
   out_5819537124154597386[35] = 0;
   out_5819537124154597386[36] = 0;
   out_5819537124154597386[37] = 0;
   out_5819537124154597386[38] = 0;
   out_5819537124154597386[39] = 0;
   out_5819537124154597386[40] = 0;
   out_5819537124154597386[41] = 0;
   out_5819537124154597386[42] = 0;
   out_5819537124154597386[43] = 0;
   out_5819537124154597386[44] = 0;
   out_5819537124154597386[45] = 0;
   out_5819537124154597386[46] = 0;
   out_5819537124154597386[47] = 0;
   out_5819537124154597386[48] = 0;
   out_5819537124154597386[49] = 1;
   out_5819537124154597386[50] = 0;
   out_5819537124154597386[51] = 0;
   out_5819537124154597386[52] = 0;
   out_5819537124154597386[53] = 0;
   out_5819537124154597386[54] = 0;
   out_5819537124154597386[55] = 0;
   out_5819537124154597386[56] = 0;
   out_5819537124154597386[57] = 0;
   out_5819537124154597386[58] = 0;
   out_5819537124154597386[59] = 0;
   out_5819537124154597386[60] = 0;
   out_5819537124154597386[61] = 0;
   out_5819537124154597386[62] = 0;
   out_5819537124154597386[63] = 0;
   out_5819537124154597386[64] = 0;
   out_5819537124154597386[65] = 0;
   out_5819537124154597386[66] = 0;
   out_5819537124154597386[67] = 0;
   out_5819537124154597386[68] = 0;
   out_5819537124154597386[69] = 0;
   out_5819537124154597386[70] = 0;
   out_5819537124154597386[71] = 0;
   out_5819537124154597386[72] = 1;
   out_5819537124154597386[73] = 0;
   out_5819537124154597386[74] = 0;
   out_5819537124154597386[75] = 0;
   out_5819537124154597386[76] = 0;
   out_5819537124154597386[77] = 0;
   out_5819537124154597386[78] = 0;
   out_5819537124154597386[79] = 0;
   out_5819537124154597386[80] = 0;
   out_5819537124154597386[81] = 0;
   out_5819537124154597386[82] = 0;
   out_5819537124154597386[83] = 0;
   out_5819537124154597386[84] = 0;
   out_5819537124154597386[85] = 0;
   out_5819537124154597386[86] = 0;
   out_5819537124154597386[87] = 0;
}
void h_13(double *state, double *unused, double *out_3605650335685201037) {
   out_3605650335685201037[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_3605650335685201037[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_3605650335685201037[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_2652288282113174433) {
   out_2652288282113174433[0] = 0;
   out_2652288282113174433[1] = 0;
   out_2652288282113174433[2] = 0;
   out_2652288282113174433[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2652288282113174433[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2652288282113174433[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_2652288282113174433[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2652288282113174433[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_2652288282113174433[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_2652288282113174433[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_2652288282113174433[10] = 0;
   out_2652288282113174433[11] = 0;
   out_2652288282113174433[12] = 0;
   out_2652288282113174433[13] = 0;
   out_2652288282113174433[14] = 0;
   out_2652288282113174433[15] = 0;
   out_2652288282113174433[16] = 0;
   out_2652288282113174433[17] = 0;
   out_2652288282113174433[18] = 0;
   out_2652288282113174433[19] = 0;
   out_2652288282113174433[20] = 0;
   out_2652288282113174433[21] = 0;
   out_2652288282113174433[22] = 0;
   out_2652288282113174433[23] = 0;
   out_2652288282113174433[24] = 0;
   out_2652288282113174433[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2652288282113174433[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2652288282113174433[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2652288282113174433[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_2652288282113174433[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_2652288282113174433[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_2652288282113174433[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_2652288282113174433[32] = 0;
   out_2652288282113174433[33] = 0;
   out_2652288282113174433[34] = 0;
   out_2652288282113174433[35] = 0;
   out_2652288282113174433[36] = 0;
   out_2652288282113174433[37] = 0;
   out_2652288282113174433[38] = 0;
   out_2652288282113174433[39] = 0;
   out_2652288282113174433[40] = 0;
   out_2652288282113174433[41] = 0;
   out_2652288282113174433[42] = 0;
   out_2652288282113174433[43] = 0;
   out_2652288282113174433[44] = 0;
   out_2652288282113174433[45] = 0;
   out_2652288282113174433[46] = 0;
   out_2652288282113174433[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2652288282113174433[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_2652288282113174433[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2652288282113174433[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2652288282113174433[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_2652288282113174433[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_2652288282113174433[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_2652288282113174433[54] = 0;
   out_2652288282113174433[55] = 0;
   out_2652288282113174433[56] = 0;
   out_2652288282113174433[57] = 0;
   out_2652288282113174433[58] = 0;
   out_2652288282113174433[59] = 0;
   out_2652288282113174433[60] = 0;
   out_2652288282113174433[61] = 0;
   out_2652288282113174433[62] = 0;
   out_2652288282113174433[63] = 0;
   out_2652288282113174433[64] = 0;
   out_2652288282113174433[65] = 0;
}
void h_14(double *state, double *unused, double *out_1228896713598557772) {
   out_1228896713598557772[0] = state[10];
   out_1228896713598557772[1] = state[11];
   out_1228896713598557772[2] = state[12];
}
void H_14(double *state, double *unused, double *out_254140736551857690) {
   out_254140736551857690[0] = 0;
   out_254140736551857690[1] = 0;
   out_254140736551857690[2] = 0;
   out_254140736551857690[3] = 0;
   out_254140736551857690[4] = 0;
   out_254140736551857690[5] = 0;
   out_254140736551857690[6] = 0;
   out_254140736551857690[7] = 0;
   out_254140736551857690[8] = 0;
   out_254140736551857690[9] = 0;
   out_254140736551857690[10] = 1;
   out_254140736551857690[11] = 0;
   out_254140736551857690[12] = 0;
   out_254140736551857690[13] = 0;
   out_254140736551857690[14] = 0;
   out_254140736551857690[15] = 0;
   out_254140736551857690[16] = 0;
   out_254140736551857690[17] = 0;
   out_254140736551857690[18] = 0;
   out_254140736551857690[19] = 0;
   out_254140736551857690[20] = 0;
   out_254140736551857690[21] = 0;
   out_254140736551857690[22] = 0;
   out_254140736551857690[23] = 0;
   out_254140736551857690[24] = 0;
   out_254140736551857690[25] = 0;
   out_254140736551857690[26] = 0;
   out_254140736551857690[27] = 0;
   out_254140736551857690[28] = 0;
   out_254140736551857690[29] = 0;
   out_254140736551857690[30] = 0;
   out_254140736551857690[31] = 0;
   out_254140736551857690[32] = 0;
   out_254140736551857690[33] = 1;
   out_254140736551857690[34] = 0;
   out_254140736551857690[35] = 0;
   out_254140736551857690[36] = 0;
   out_254140736551857690[37] = 0;
   out_254140736551857690[38] = 0;
   out_254140736551857690[39] = 0;
   out_254140736551857690[40] = 0;
   out_254140736551857690[41] = 0;
   out_254140736551857690[42] = 0;
   out_254140736551857690[43] = 0;
   out_254140736551857690[44] = 0;
   out_254140736551857690[45] = 0;
   out_254140736551857690[46] = 0;
   out_254140736551857690[47] = 0;
   out_254140736551857690[48] = 0;
   out_254140736551857690[49] = 0;
   out_254140736551857690[50] = 0;
   out_254140736551857690[51] = 0;
   out_254140736551857690[52] = 0;
   out_254140736551857690[53] = 0;
   out_254140736551857690[54] = 0;
   out_254140736551857690[55] = 0;
   out_254140736551857690[56] = 1;
   out_254140736551857690[57] = 0;
   out_254140736551857690[58] = 0;
   out_254140736551857690[59] = 0;
   out_254140736551857690[60] = 0;
   out_254140736551857690[61] = 0;
   out_254140736551857690[62] = 0;
   out_254140736551857690[63] = 0;
   out_254140736551857690[64] = 0;
   out_254140736551857690[65] = 0;
}
void h_33(double *state, double *unused, double *out_1189235170817110326) {
   out_1189235170817110326[0] = state[16];
   out_1189235170817110326[1] = state[17];
   out_1189235170817110326[2] = state[18];
}
void H_33(double *state, double *unused, double *out_6021888678830016645) {
   out_6021888678830016645[0] = 0;
   out_6021888678830016645[1] = 0;
   out_6021888678830016645[2] = 0;
   out_6021888678830016645[3] = 0;
   out_6021888678830016645[4] = 0;
   out_6021888678830016645[5] = 0;
   out_6021888678830016645[6] = 0;
   out_6021888678830016645[7] = 0;
   out_6021888678830016645[8] = 0;
   out_6021888678830016645[9] = 0;
   out_6021888678830016645[10] = 0;
   out_6021888678830016645[11] = 0;
   out_6021888678830016645[12] = 0;
   out_6021888678830016645[13] = 0;
   out_6021888678830016645[14] = 0;
   out_6021888678830016645[15] = 0;
   out_6021888678830016645[16] = 1;
   out_6021888678830016645[17] = 0;
   out_6021888678830016645[18] = 0;
   out_6021888678830016645[19] = 0;
   out_6021888678830016645[20] = 0;
   out_6021888678830016645[21] = 0;
   out_6021888678830016645[22] = 0;
   out_6021888678830016645[23] = 0;
   out_6021888678830016645[24] = 0;
   out_6021888678830016645[25] = 0;
   out_6021888678830016645[26] = 0;
   out_6021888678830016645[27] = 0;
   out_6021888678830016645[28] = 0;
   out_6021888678830016645[29] = 0;
   out_6021888678830016645[30] = 0;
   out_6021888678830016645[31] = 0;
   out_6021888678830016645[32] = 0;
   out_6021888678830016645[33] = 0;
   out_6021888678830016645[34] = 0;
   out_6021888678830016645[35] = 0;
   out_6021888678830016645[36] = 0;
   out_6021888678830016645[37] = 0;
   out_6021888678830016645[38] = 0;
   out_6021888678830016645[39] = 1;
   out_6021888678830016645[40] = 0;
   out_6021888678830016645[41] = 0;
   out_6021888678830016645[42] = 0;
   out_6021888678830016645[43] = 0;
   out_6021888678830016645[44] = 0;
   out_6021888678830016645[45] = 0;
   out_6021888678830016645[46] = 0;
   out_6021888678830016645[47] = 0;
   out_6021888678830016645[48] = 0;
   out_6021888678830016645[49] = 0;
   out_6021888678830016645[50] = 0;
   out_6021888678830016645[51] = 0;
   out_6021888678830016645[52] = 0;
   out_6021888678830016645[53] = 0;
   out_6021888678830016645[54] = 0;
   out_6021888678830016645[55] = 0;
   out_6021888678830016645[56] = 0;
   out_6021888678830016645[57] = 0;
   out_6021888678830016645[58] = 0;
   out_6021888678830016645[59] = 0;
   out_6021888678830016645[60] = 0;
   out_6021888678830016645[61] = 0;
   out_6021888678830016645[62] = 1;
   out_6021888678830016645[63] = 0;
   out_6021888678830016645[64] = 0;
   out_6021888678830016645[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_2168916314203170392) {
  H(in_vec, out_2168916314203170392);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_3677991861132702640) {
  err_fun(nom_x, delta_x, out_3677991861132702640);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_4193639185133627321) {
  inv_err_fun(nom_x, true_x, out_4193639185133627321);
}
void live_H_mod_fun(double *state, double *out_7723395843437171411) {
  H_mod_fun(state, out_7723395843437171411);
}
void live_f_fun(double *state, double dt, double *out_7654632586872644998) {
  f_fun(state,  dt, out_7654632586872644998);
}
void live_F_fun(double *state, double dt, double *out_3514164014686322129) {
  F_fun(state,  dt, out_3514164014686322129);
}
void live_h_4(double *state, double *unused, double *out_4597397267778489686) {
  h_4(state, unused, out_4597397267778489686);
}
void live_H_4(double *state, double *unused, double *out_7541359671816305160) {
  H_4(state, unused, out_7541359671816305160);
}
void live_h_9(double *state, double *unused, double *out_1228896713598557772) {
  h_9(state, unused, out_1228896713598557772);
}
void live_H_9(double *state, double *unused, double *out_254140736551857690) {
  H_9(state, unused, out_254140736551857690);
}
void live_h_10(double *state, double *unused, double *out_3864771250231827369) {
  h_10(state, unused, out_3864771250231827369);
}
void live_H_10(double *state, double *unused, double *out_7243155102400884539) {
  H_10(state, unused, out_7243155102400884539);
}
void live_h_12(double *state, double *unused, double *out_208960420128193132) {
  h_12(state, unused, out_208960420128193132);
}
void live_H_12(double *state, double *unused, double *out_125768641866145332) {
  H_12(state, unused, out_125768641866145332);
}
void live_h_35(double *state, double *unused, double *out_4664419399287101723) {
  h_35(state, unused, out_4664419399287101723);
}
void live_H_35(double *state, double *unused, double *out_2871331674191159041) {
  H_35(state, unused, out_2871331674191159041);
}
void live_h_32(double *state, double *unused, double *out_3012430670723782515) {
  h_32(state, unused, out_3012430670723782515);
}
void live_H_32(double *state, double *unused, double *out_5819537124154597386) {
  H_32(state, unused, out_5819537124154597386);
}
void live_h_13(double *state, double *unused, double *out_3605650335685201037) {
  h_13(state, unused, out_3605650335685201037);
}
void live_H_13(double *state, double *unused, double *out_2652288282113174433) {
  H_13(state, unused, out_2652288282113174433);
}
void live_h_14(double *state, double *unused, double *out_1228896713598557772) {
  h_14(state, unused, out_1228896713598557772);
}
void live_H_14(double *state, double *unused, double *out_254140736551857690) {
  H_14(state, unused, out_254140736551857690);
}
void live_h_33(double *state, double *unused, double *out_1189235170817110326) {
  h_33(state, unused, out_1189235170817110326);
}
void live_H_33(double *state, double *unused, double *out_6021888678830016645) {
  H_33(state, unused, out_6021888678830016645);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
